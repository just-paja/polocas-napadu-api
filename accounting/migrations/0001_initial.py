# Generated by Django 2.2.10 on 2020-03-01 15:39

import accounting.models.account
import accounting.models.currency
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_extensions.db.fields
import encrypted_fields.fields
import fields.description
import fields.name
import fields.visibility


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', fields.description.DescriptionField(help_text='nameDescriptionText', verbose_name='Description')),
                ('name', fields.name.NameField(help_text='nameHelpText', max_length=63, verbose_name='Name')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('visibility', fields.visibility.VisibilityField(choices=[(1, 'Private'), (2, 'Public'), (3, 'Deleted')], default=2, help_text='visibilityHelpText', verbose_name='Visibility')),
                ('currency', accounting.models.currency.CurrencyField(choices=[('CZK', 'CZK'), ('EUR', 'EUR'), ('USD', 'USD')], default='CZK', help_text='ISO 4217 defined three letter currency abbreviation', max_length=3, verbose_name='Currency')),
                ('account_number', accounting.models.account.AccountNumberField(blank=True, help_text='Account number of person sending this payment', max_length=255, null=True, verbose_name='Account number')),
                ('bank', accounting.models.account.BankNumberField(blank=True, help_text='Bank sending this payment', max_length=63, null=True, verbose_name='Bank')),
                ('iban', accounting.models.account.IBanField(blank=True, help_text='International bank account number', max_length=255, null=True, verbose_name='IBAN')),
                ('bic', accounting.models.account.BicField(blank=True, help_text='Business identification code, specified by SWIFT', max_length=255, null=True, verbose_name='BIC')),
                ('fio_readonly_key', encrypted_fields.fields.EncryptedCharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Account',
                'verbose_name_plural': 'Accounts',
            },
        ),
        migrations.CreateModel(
            name='BankScrape',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('days_back', models.PositiveIntegerField(blank=True, null=True)),
                ('source', models.PositiveIntegerField(choices=[(1, 'Manual'), (2, 'Cron')], default=1)),
                ('status', models.PositiveIntegerField(choices=[(1, 'Requested'), (2, 'Succeeded'), (3, 'Failed')], default=1)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scrapes', to='accounting.Account', verbose_name='Account')),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CounterParty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', fields.name.NameField(help_text='nameHelpText', max_length=63, verbose_name='Name')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
            ],
            options={
                'verbose_name': 'CounterParty',
                'verbose_name_plural': 'CounterParties',
            },
        ),
        migrations.CreateModel(
            name='KnownAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('sender_account_number', accounting.models.account.AccountNumberField(blank=True, help_text='Account number of person sending this payment', max_length=255, null=True, verbose_name='Account number')),
                ('sender_bank', accounting.models.account.BankNumberField(blank=True, help_text='Bank sending this payment', max_length=63, null=True, verbose_name='Bank')),
                ('sender_iban', accounting.models.account.IBanField(blank=True, help_text='International bank account number', max_length=255, null=True, verbose_name='IBAN')),
                ('sender_bic', accounting.models.account.BicField(blank=True, help_text='Business identification code, specified by SWIFT', max_length=255, null=True, verbose_name='BIC')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to='accounting.CounterParty')),
            ],
            options={
                'verbose_name': 'Known account',
                'verbose_name_plural': 'Known accounts',
                'unique_together': {('sender_account_number', 'sender_bank'), ('sender_iban',)},
            },
        ),
        migrations.CreateModel(
            name='MembershipLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', fields.description.DescriptionField(help_text='nameDescriptionText', verbose_name='Description')),
                ('name', fields.name.NameField(help_text='nameHelpText', max_length=63, verbose_name='Name')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('start', models.DateField(default=django.utils.timezone.now, verbose_name='Start')),
                ('end', models.DateField(blank=True, null=True, verbose_name='End')),
            ],
            options={
                'verbose_name': 'Membership level',
                'verbose_name_plural': 'Membership levels',
            },
        ),
        migrations.CreateModel(
            name='Promise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('amount', accounting.models.currency.AmountField(decimal_places=2, default=0, max_digits=19, verbose_name='Amount')),
                ('currency', accounting.models.currency.CurrencyField(choices=[('CZK', 'CZK'), ('EUR', 'EUR'), ('USD', 'USD')], default='CZK', help_text='ISO 4217 defined three letter currency abbreviation', max_length=3, verbose_name='Currency')),
                ('variable_symbol', models.PositiveIntegerField(blank=True, help_text='Optional payment identifier', null=True, verbose_name='variableSymbol')),
                ('constant_symbol', models.PositiveIntegerField(blank=True, help_text='Purpose code of the payment specified by Czech banking system.', null=True, verbose_name='constantSymbol')),
                ('specific_symbol', models.PositiveIntegerField(blank=True, help_text='This number focuses variable symbol.', null=True, verbose_name='Specific symbol')),
                ('start', models.DateField(default=django.utils.timezone.now, verbose_name='Start')),
                ('end', models.DateField(blank=True, null=True, verbose_name='End')),
                ('initial_amount', accounting.models.currency.AmountField(decimal_places=2, default=0, max_digits=19, verbose_name='Initial amount')),
                ('status', models.PositiveIntegerField(choices=[(1, 'Expected'), (2, 'Paid'), (3, 'Underpaid'), (4, 'Overpaid')], default=1, verbose_name='Status')),
                ('name', fields.name.NameField(blank=True, help_text='nameHelpText', max_length=127, null=True, verbose_name='Name')),
                ('repeat', models.CharField(blank=True, choices=[('P1M', 'Monthly')], max_length=31, null=True, verbose_name='Repeat')),
            ],
            options={
                'verbose_name': 'Promise',
                'verbose_name_plural': 'Promises',
            },
        ),
        migrations.CreateModel(
            name='Purpose',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', fields.description.DescriptionField(help_text='nameDescriptionText', verbose_name='Description')),
                ('name', fields.name.NameField(help_text='nameHelpText', max_length=63, verbose_name='Name')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Statement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('amount', accounting.models.currency.AmountField(decimal_places=2, default=0, max_digits=19, verbose_name='Amount')),
                ('currency', accounting.models.currency.CurrencyField(choices=[('CZK', 'CZK'), ('EUR', 'EUR'), ('USD', 'USD')], default='CZK', help_text='ISO 4217 defined three letter currency abbreviation', max_length=3, verbose_name='Currency')),
                ('variable_symbol', models.PositiveIntegerField(blank=True, help_text='Optional payment identifier', null=True, verbose_name='variableSymbol')),
                ('constant_symbol', models.PositiveIntegerField(blank=True, help_text='Purpose code of the payment specified by Czech banking system.', null=True, verbose_name='constantSymbol')),
                ('specific_symbol', models.PositiveIntegerField(blank=True, help_text='This number focuses variable symbol.', null=True, verbose_name='Specific symbol')),
                ('sender_account_number', accounting.models.account.AccountNumberField(blank=True, help_text='Account number of person sending this payment', max_length=255, null=True, verbose_name='Account number')),
                ('sender_bank', accounting.models.account.BankNumberField(blank=True, help_text='Bank sending this payment', max_length=63, null=True, verbose_name='Bank')),
                ('sender_iban', accounting.models.account.IBanField(blank=True, help_text='International bank account number', max_length=255, null=True, verbose_name='IBAN')),
                ('sender_bic', accounting.models.account.BicField(blank=True, help_text='Business identification code, specified by SWIFT', max_length=255, null=True, verbose_name='BIC')),
                ('ident', models.CharField(blank=True, help_text='Payment identificator, usually generated by the bank', max_length=255, null=True, verbose_name='Payment identificator')),
                ('received_at', models.DateTimeField(blank=True, help_text='When was the payment received by our bank', null=True, verbose_name='Date Time received')),
                ('user_identification', models.CharField(blank=True, help_text='User identification given by the bank', max_length=255, null=True, verbose_name='User identification')),
                ('message', models.TextField(blank=True, max_length=255, null=True, verbose_name='Message')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statements', to='accounting.Account')),
                ('known_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='statements', to='accounting.KnownAccount')),
                ('promise', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='statements', to='accounting.Promise')),
                ('scrape', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='statements', to='accounting.BankScrape')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurposeCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', fields.description.DescriptionField(help_text='nameDescriptionText', verbose_name='Description')),
                ('name', fields.name.NameField(help_text='nameHelpText', max_length=63, verbose_name='Name')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('purposes', models.ManyToManyField(blank=True, related_name='categories', to='accounting.Purpose')),
            ],
            options={
                'verbose_name': 'purpose category',
                'verbose_name_plural': 'purpose categories',
            },
        ),
        migrations.AddField(
            model_name='promise',
            name='purpose',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='promises', to='accounting.Purpose'),
        ),
        migrations.CreateModel(
            name='MembershipLevelFee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('start', models.DateField(default=django.utils.timezone.now, verbose_name='Start')),
                ('end', models.DateField(blank=True, null=True, verbose_name='End')),
                ('amount', accounting.models.currency.AmountField(decimal_places=2, default=0, max_digits=19, verbose_name='Amount')),
                ('currency', accounting.models.currency.CurrencyField(choices=[('CZK', 'CZK'), ('EUR', 'EUR'), ('USD', 'USD')], default='CZK', help_text='ISO 4217 defined three letter currency abbreviation', max_length=3, verbose_name='Currency')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.MembershipLevel')),
            ],
            options={
                'verbose_name': 'Membership level',
                'verbose_name_plural': 'Membership levels',
            },
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('start', models.DateField(default=django.utils.timezone.now, verbose_name='Start')),
                ('end', models.DateField(blank=True, null=True, verbose_name='End')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='memberships', to='accounting.MembershipLevel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Membership',
                'verbose_name_plural': 'Memberships',
            },
        ),
        migrations.CreateModel(
            name='Debt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('amount', accounting.models.currency.AmountField(decimal_places=2, default=0, max_digits=19, verbose_name='Amount')),
                ('currency', accounting.models.currency.CurrencyField(choices=[('CZK', 'CZK'), ('EUR', 'EUR'), ('USD', 'USD')], default='CZK', help_text='ISO 4217 defined three letter currency abbreviation', max_length=3, verbose_name='Currency')),
                ('source', models.PositiveIntegerField(choices=[(1, 'Manually created'), (2, 'Initial debt'), (3, 'Recurring generated')], default=1)),
                ('description', fields.description.DescriptionField(blank=True, help_text='nameDescriptionText', null=True, verbose_name='Description')),
                ('maturity', models.DateField(verbose_name='Maturity')),
                ('promise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='debts', to='accounting.Promise')),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.AlterUniqueTogether(
            name='promise',
            unique_together={('variable_symbol',)},
        ),
        migrations.CreateModel(
            name='MembershipFee',
            fields=[
                ('promise_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='accounting.Promise')),
                ('level_fee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='fees', to='accounting.MembershipLevelFee')),
                ('membership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fees', to='accounting.Membership')),
            ],
            options={
                'verbose_name': 'Membership fee',
                'verbose_name_plural': 'Membership fees',
            },
            bases=('accounting.promise',),
        ),
    ]
